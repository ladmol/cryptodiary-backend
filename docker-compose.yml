version: '3'

services:
  # Backend API service
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    depends_on:
      - supertokens
    networks:
      - supertokens-network
    restart: unless-stopped
    environment:
      - SUPERTOKENS_URI=http://supertokens:3567
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3001/health"]
      interval: 15s
      timeout: 5s
      retries: 3

  # SuperTokens Core service
  supertokens:
    image: registry.supertokens.io/supertokens/supertokens-postgresql:latest
    ports:
      - "3567:3567"
    environment:
      POSTGRESQL_CONNECTION_URI: "postgresql://postgres:postgres@postgres:5432/supertokens"
    networks:
      - supertokens-network
    depends_on:
      - postgres
    restart: unless-stopped
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/localhost/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: localhost\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL Database for SuperTokens
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: supertokens
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - supertokens-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  supertokens-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
